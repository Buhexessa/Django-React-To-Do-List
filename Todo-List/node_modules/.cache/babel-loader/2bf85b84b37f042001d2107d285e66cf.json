{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Todo-List\\\\Todo-List\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Todo from './Components/Todo/Todo';\nimport Landing from './Components/Landing/Landing';\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loggedIn: false,\n      checked: true,\n      authToken: localStorage.getItem('AuthToken') || \"\",\n      darkMode: localStorage.getItem('DarkMode') || \"\"\n    };\n\n    this.toggleEnabled = event => {\n      this.setState({\n        checked: event.target.checked\n      }, () => {\n        if (this.state.checked === true) {\n          localStorage.setItem(\"DarkMode\", \"Dark\");\n        } else {\n          localStorage.setItem(\"DarkMode\", \"Light\");\n        }\n      });\n    };\n\n    this.changeLogin = data => {\n      this.setState({\n        loggedIn: data === null ? false : true,\n        authToken: data === null ? \"\" : data[\"auth_token\"]\n      }, () => {\n        if (data === null) {\n          localStorage.removeItem(\"AuthToken\");\n        } else {\n          localStorage.setItem(\"AuthToken\", this.state.authToken);\n        }\n      });\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    if (this.state.authToken !== \"\") {\n      this.setState({\n        loggedIn: !this.state.loggedIn\n      });\n    }\n\n    if (this.state.darkMode === \"Dark\") {\n      this.setState({\n        checked: true\n      });\n    } else {\n      this.setState({\n        checked: false\n      });\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.checked === true) {\n      document.body.style.backgroundColor = \"#222\";\n    } else {\n      document.body.style.backgroundColor = \"#fff\";\n    }\n\n    let htmlTags = document.getElementsByTagName(\"html\");\n\n    for (var i = 0; i < htmlTags.length; i++) {\n      htmlTags[i].style.background = this.state.checked === true ? \"#111\" : \"#007bff\";\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.state.checked === true) {\n      document.body.style.backgroundColor = \"#222\";\n    } else {\n      document.body.style.backgroundColor = \"#fff\";\n    }\n\n    let htmlTags = document.getElementsByTagName(\"html\");\n\n    for (var i = 0; i < htmlTags.length; i++) {\n      htmlTags[i].style.background = this.state.checked === true ? \"#111\" : \"#007bff\";\n    }\n  }\n\n  render() {\n    const dark = {\n      background: \"#111\",\n      color: \"white\"\n    };\n    const light = {\n      color: \"#fff\",\n      background: \"#007bff\"\n    };\n    const darktoggle = {\n      position: \"absolute\",\n      top: \"100\",\n      right: \"0\",\n      padding: \"20px\",\n      color: \"white\"\n    };\n    const lighttoggle = {\n      position: \"absolute\",\n      top: \"100\",\n      right: \"0\",\n      padding: \"20px\",\n      color: \"white\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.loggedIn === true ? \"\" : \"app\",\n      style: this.state.checked === true ? dark : light,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, this.state.loggedIn === true ? /*#__PURE__*/React.createElement(Todo, {\n      isDark: this.state.checked,\n      authToken: this.state.authToken,\n      changeLogin: this.changeLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }) : /*#__PURE__*/React.createElement(Landing, {\n      loggedIn: this.state.loggedIn,\n      changeLogin: this.changeLogin,\n      isDark: this.state.checked,\n      authToken: this.state.authToken,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      style: this.state.checked === true ? darktoggle : lighttoggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"switch\",\n      id: \"custom-switch\",\n      checked: this.state.checked,\n      onChange: this.toggleEnabled,\n      label: this.state.checked === true ? \"Dark\" : \"Light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/User/Desktop/Todo-List/Todo-List/src/App.js"],"names":["React","Component","Todo","Landing","Form","App","state","loggedIn","checked","authToken","localStorage","getItem","darkMode","toggleEnabled","event","setState","target","setItem","changeLogin","data","removeItem","UNSAFE_componentWillMount","componentDidMount","document","body","style","backgroundColor","htmlTags","getElementsByTagName","i","length","background","componentDidUpdate","render","dark","color","light","darktoggle","position","top","right","padding","lighttoggle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Todo from './Components/Todo/Todo';\nimport Landing from './Components/Landing/Landing';\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    loggedIn: false,\n    checked: true,\n    authToken: localStorage.getItem('AuthToken') || \"\",\n    darkMode: localStorage.getItem('DarkMode') || \"\"\n  }\n\n  UNSAFE_componentWillMount() {\n    if(this.state.authToken !== \"\") {\n      this.setState({\n        loggedIn: !this.state.loggedIn\n      });\n    }\n\n    if(this.state.darkMode === \"Dark\") {\n      this.setState({\n        checked: true\n      });\n    } else {\n      this.setState({\n        checked: false\n      });\n    }\n  }\n\n  componentDidMount() {\n    if(this.state.checked === true) {\n        document.body.style.backgroundColor = \"#222\";\n    } else {\n        document.body.style.backgroundColor = \"#fff\";\n    }\n    let htmlTags = document.getElementsByTagName(\"html\");\n    for(var i=0; i < htmlTags.length; i++) {\n      htmlTags[i].style.background = this.state.checked === true ? \"#111\" : \"#007bff\";\n    }\n  }\n\n  componentDidUpdate() {\n    if(this.state.checked === true) {\n        document.body.style.backgroundColor = \"#222\";\n    } else {\n        document.body.style.backgroundColor = \"#fff\";\n    }\n    let htmlTags = document.getElementsByTagName(\"html\");\n    for(var i=0; i < htmlTags.length; i++) {\n      htmlTags[i].style.background = this.state.checked === true ? \"#111\" : \"#007bff\";\n    }\n  }\n\n\n  toggleEnabled = (event) => {\n    this.setState({\n      checked: event.target.checked\n    }, () => {\n      if(this.state.checked === true) {\n        localStorage.setItem(\"DarkMode\", \"Dark\");\n      } else {\n        localStorage.setItem(\"DarkMode\", \"Light\");\n      }\n    });\n  }\n\n  changeLogin = (data) => {\n    this.setState({\n      loggedIn: data === null ? false : true,\n      authToken: data === null ? \"\" : data[\"auth_token\"]\n    }, () => {\n      if(data === null) {\n        localStorage.removeItem(\"AuthToken\");\n      } else {\n        localStorage.setItem(\"AuthToken\", this.state.authToken);\n      }\n    });\n  }\n\n  render() {\n    \n    const dark = {\n      background: \"#111\",\n      color: \"white\"\n    }\n\n    const light = {\n      color: \"#fff\",\n      background: \"#007bff\"\n    }\n\n    const darktoggle = {\n      position: \"absolute\",\n      top: \"100\",\n      right: \"0\",\n      padding: \"20px\",\n      color: \"white\"\n    };\n\n    const lighttoggle = {\n      position: \"absolute\",\n      top: \"100\",\n      right: \"0\",\n      padding: \"20px\",\n      color: \"white\"\n    };\n\n    return (\n      <div className={this.state.loggedIn === true ? \"\" : \"app\"} style={this.state.checked === true ? dark : light}>\n        {this.state.loggedIn === true ?\n        <Todo \n          isDark={this.state.checked}\n          authToken={this.state.authToken}\n          changeLogin={this.changeLogin}\n        /> :\n        <Landing \n          loggedIn={this.state.loggedIn}\n          changeLogin={this.changeLogin}\n          isDark={this.state.checked}\n          authToken={this.state.authToken}\n        />}\n        <Form style={this.state.checked === true ? darktoggle : lighttoggle}>\n          <Form.Check \n            type=\"switch\"\n            id=\"custom-switch\"\n            checked={this.state.checked}\n            onChange={this.toggleEnabled}\n            label={this.state.checked === true ? \"Dark\" : \"Light\"}\n          />\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}