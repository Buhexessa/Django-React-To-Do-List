{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Todo-List\\\\Todo-List\\\\src\\\\Components\\\\Todo\\\\Todo.js\";\nimport React, { Component } from 'react';\nimport Task from '../Task/Task';\nimport AddTask from '../AddTask/AddTask';\nimport NavbarAbove from '../Navbar/Navbar';\nimport Image from 'react-bootstrap/Image';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSort, faSortUp, faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Archive from '../Archive/Archive';\nimport logo from './preview.png';\nimport './Todo.css';\n\nclass Todo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showAdd: false,\n      todoItems: [],\n      completedTodo: [],\n      originalData: [],\n      sortType: {\n        status: '',\n        label: '',\n        date: 'asc',\n        time: ''\n      },\n      currentSort: \"date\",\n      username: \"\"\n    };\n\n    this.updateData = () => {\n      let todoData = [];\n      let completed = [];\n      let token = (\"Token \" + this.props.authToken).toString();\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": token\n        }\n      };\n      fetch('http://127.0.0.1:8000/item/get_all', requestOptions).then(response => response.json()).then(data => {\n        let OGdata = [];\n        let keyId = 1;\n        data.forEach(item => {\n          let newData = {\n            key: keyId,\n            id: item[\"id\"],\n            description: item[\"description\"],\n            status: item[\"status\"],\n            label: item[\"label\"],\n            date: item[\"due_date_time\"].slice(0, 10),\n            time: item[\"due_date_time\"].slice(11, 19)\n          };\n          keyId++;\n          OGdata.push(newData);\n        });\n        this.setState({\n          originalData: OGdata\n        }, () => {\n          this.state.originalData.forEach(item => {\n            let nowDate = Date.now();\n            let dueDate = new Date(item.date + \" \" + item.time);\n            let daysDiff = (dueDate.getTime() - nowDate) / (1000 * 3600 * 24);\n\n            if (item.status !== 'Completed') {\n              if (daysDiff < 0) {\n                item.status = \"Overdue\";\n              } else if (daysDiff <= 2) {\n                item.status = \"Pending\";\n              } else {\n                item.status = \"Ongoing\";\n              }\n\n              todoData.push(item);\n            } else {\n              completed.push(item);\n            }\n          });\n          this.setState({\n            todoItems: todoData,\n            completedTodo: completed\n          }, () => {\n            this.sortTasks(this.state.currentSort);\n            this.forceUpdate();\n          });\n        });\n      });\n    };\n\n    this.fetchUsername = () => {\n      let token = (\"Token \" + this.props.authToken).toString();\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": token\n        }\n      };\n      fetch('http://127.0.0.1:8000/user/getinfo/', requestOptions).then(response => response.json()).then(data => {\n        this.setState({\n          username: data[\"first_name\"]\n        });\n      });\n    };\n\n    this.toggleAddTask = () => {\n      this.setState({\n        showAdd: !this.state.showAdd\n      });\n    };\n\n    this.addNewTask = () => {\n      this.updateData();\n      this.forceUpdate();\n    };\n\n    this.getSortIcon = val => {\n      if (this.state.currentSort === val) {\n        if (this.state.sortType[val] === 'asc') {\n          return /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n            icon: faSortUp,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }\n          });\n        } else if (this.state.sortType[val] === 'desc') {\n          return /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n            icon: faSortDown,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }\n          });\n        } else {\n          return /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n            icon: faSort,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }\n          });\n        }\n      } else {\n        return /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faSort,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }\n        });\n      }\n    };\n\n    this.compareValues = (key, order) => {\n      return function innerSort(a, b) {\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return 0;\n        const comparison = a[key].localeCompare(b[key]);\n        return order === 'desc' ? comparison * -1 : comparison;\n      };\n    };\n\n    this.sortTasks = (val, isTrue = false) => {\n      let newTodo = [...this.state.todoItems];\n      let newSortType = this.state.sortType;\n      let order = newSortType[val];\n\n      if (isTrue === true) {\n        if (newSortType[val] === 'asc') {\n          order = 'desc';\n        } else {\n          order = 'asc';\n        }\n      }\n\n      newTodo.sort(this.compareValues(val, order));\n      newSortType[val] = order;\n      this.setState({\n        todoItems: newTodo,\n        sortType: newSortType,\n        currentSort: val\n      });\n    };\n\n    this.completedTask = (id, date, time) => {\n      this.state.todoItems.forEach(item => {\n        if (id.toString().localeCompare(item.id.toString()) === 0) {\n          item.status = \"Completed\";\n          item.date = date;\n          item.time = time;\n          let updateItem = {\n            \"id\": item.id,\n            \"description\": item.description,\n            \"status\": item.status,\n            \"label\": item.label,\n            \"date\": item.date,\n            \"time\": item.time\n          };\n          console.log(updateItem);\n          let token = (\"Token \" + this.props.authToken).toString();\n          const requestOptions = {\n            method: 'POST',\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": token\n            },\n            body: JSON.stringify(updateItem)\n          };\n          fetch('http://127.0.0.1:8000/item/update', requestOptions).then(response => {\n            if (response.status !== 200) {\n              alert(\"Произошла ошибка. В настоящее время мы работаем над ее устранением. Спасибо.\");\n            }\n          });\n        }\n      });\n      setTimeout(() => {\n        this.updateData();\n      }, 100);\n    };\n\n    this.searchFunction = (fromDate, toDate, val = 1) => {\n      if (val === 1) {\n        let newTodo = [];\n        let completed = [];\n        this.state.originalData.forEach(item => {\n          let current = new Date(item.date + \" 00:00:00\");\n          let fDate = new Date(fromDate + \" 00:00:00\");\n          let tDate = new Date(toDate + \" 00:00:00\");\n          let fDaysDiff = (current.getTime() - fDate.getTime()) / (1000 * 3600 * 24);\n          let tDaysDiff = (current.getTime() - tDate.getTime()) / (1000 * 3600 * 24);\n\n          if (fDaysDiff >= 0 && tDaysDiff <= 0) {\n            if (item.status === \"Completed\") {\n              completed.push(item);\n            } else {\n              newTodo.push(item);\n            }\n          }\n        });\n\n        if (newTodo.length !== 0) {\n          this.setState({\n            todoItems: newTodo,\n            completedTodo: completed\n          });\n        } else {\n          alert(\"Нет результатов поиска.\");\n        }\n      } else {\n        this.updateData();\n      }\n    };\n\n    this.aFunctionCall = data => {\n      this.props.changeLogin(data);\n    };\n\n    this.removeItem = id => {\n      this.state.originalData.forEach(item => {\n        if (id.toString().localeCompare(item.id.toString()) === 0) {\n          let removeItem = {\n            \"id\": item.id,\n            \"description\": item.description,\n            \"status\": item.status,\n            \"label\": item.label,\n            \"date\": item.date,\n            \"time\": item.time\n          };\n          let token = (\"Token \" + this.props.authToken).toString();\n          const requestOptions = {\n            method: 'POST',\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": token\n            },\n            body: JSON.stringify(removeItem)\n          };\n          fetch('http://127.0.0.1:8000/item/delete', requestOptions).then(response => {\n            if (response.status !== 200) {\n              alert(\"Произошла ошибка. В настоящее время мы работаем над ее устранением. Спасибо.\");\n            }\n          });\n        }\n      });\n      setTimeout(() => {\n        this.updateData();\n      }, 100);\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    console.log(\"In Component Will Mount\");\n    this.updateData();\n  }\n\n  componentDidMount() {\n    this.fetchUsername();\n  }\n\n  render() {\n    const dark = {\n      background: \"#333\",\n      color: \"white\"\n    };\n    const light = {\n      color: \"#555\",\n      background: \"white\"\n    };\n    const bgDark = {\n      background: \"#111\",\n      color: \"white\"\n    };\n    const bgLight = {\n      background: \"#007bff\",\n      color: \"#555\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"belowBody\",\n      style: this.props.isDark === true ? bgDark : bgLight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavbarAbove, {\n      toggleModal: this.toggleAddTask,\n      searchFunction: this.searchFunction,\n      isDark: this.props.isDark,\n      aFunctionCall: this.aFunctionCall,\n      authToken: this.props.authToken,\n      uname: this.state.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AddTask, {\n      show: this.state.showAdd,\n      onHide: this.toggleAddTask,\n      addnewtask: this.addNewTask,\n      isDark: this.props.isDark,\n      authToken: this.props.authToken,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: this.props.isDark === true ? dark : light,\n      className: this.state.todoItems.length !== 0 ? \"todo-table mr-bottom\" : \"todo-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }\n    }, this.state.todoItems.length !== 0 ? /*#__PURE__*/React.createElement(\"table\", {\n      style: this.props.isDark === true ? dark : light,\n      className: \"table table-borderless table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 19\n      }\n    }, \"\\u0417\\u0430\\u0434\\u0430\\u0447\\u0430\"), /*#__PURE__*/React.createElement(\"th\", {\n      onClick: () => this.sortTasks(\"status\", true),\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sort-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 21\n      }\n    }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\", this.getSortIcon(\"status\"))), /*#__PURE__*/React.createElement(\"th\", {\n      onClick: () => this.sortTasks(\"label\", true),\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sort-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 21\n      }\n    }, \"\\u0417\\u0430\\u043C\\u0435\\u0442\\u043A\\u0430\", this.getSortIcon(\"label\"))), /*#__PURE__*/React.createElement(\"th\", {\n      onClick: () => this.sortTasks(\"date\", true),\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sort-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 21\n      }\n    }, \"\\u0414\\u0430\\u0442\\u0430\", this.getSortIcon(\"date\"))), /*#__PURE__*/React.createElement(\"th\", {\n      onClick: () => this.sortTasks(\"time\", true),\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sort-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 21\n      }\n    }, \"\\u0412\\u0440\\u0435\\u043C\\u044F\", this.getSortIcon(\"time\"))), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 15\n      }\n    }, this.state.todoItems.map(item => {\n      return /*#__PURE__*/React.createElement(Task, {\n        key: item.key,\n        id: item.id,\n        desc: item.description,\n        status: item.status,\n        label: item.label,\n        date: item.date,\n        time: item.time,\n        isDark: this.props.isDark,\n        completedTask: this.completedTask,\n        removeItem: this.removeItem,\n        authToken: this.props.authToken,\n        updateData: this.updateData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 21\n        }\n      });\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: logo,\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 17\n      }\n    }, \"\\u041D\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0439 \\u043C\\u043E\\u043C\\u0435\\u043D\\u0442 \\u0432\\u0441\\u0435 \\u0433\\u043E\\u0442\\u043E\\u0432\\u043E.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 73\n      }\n    }), \"\\u041D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435 \\xAB\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\\xBB, \\u0447\\u0442\\u043E\\u0431\\u044B \\u043E\\u0442\\u0441\\u043B\\u0435\\u0436\\u0438\\u0432\\u0430\\u0442\\u044C \\u0441\\u0432\\u043E\\u0438 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438..\"))), /*#__PURE__*/React.createElement(Archive, {\n      doneItems: this.state.completedTodo,\n      removeItem: this.removeItem,\n      isDark: this.props.isDark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Todo;","map":{"version":3,"sources":["C:/Users/User/Desktop/Todo-List/Todo-List/src/Components/Todo/Todo.js"],"names":["React","Component","Task","AddTask","NavbarAbove","Image","FontAwesomeIcon","faSort","faSortUp","faSortDown","Archive","logo","Todo","state","showAdd","todoItems","completedTodo","originalData","sortType","status","label","date","time","currentSort","username","updateData","todoData","completed","token","props","authToken","toString","requestOptions","method","headers","fetch","then","response","json","data","OGdata","keyId","forEach","item","newData","key","id","description","slice","push","setState","nowDate","Date","now","dueDate","daysDiff","getTime","sortTasks","forceUpdate","fetchUsername","toggleAddTask","addNewTask","getSortIcon","val","compareValues","order","innerSort","a","b","hasOwnProperty","comparison","localeCompare","isTrue","newTodo","newSortType","sort","completedTask","updateItem","console","log","body","JSON","stringify","alert","setTimeout","searchFunction","fromDate","toDate","current","fDate","tDate","fDaysDiff","tDaysDiff","length","aFunctionCall","changeLogin","removeItem","UNSAFE_componentWillMount","componentDidMount","render","dark","background","color","light","bgDark","bgLight","isDark","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Task from '../Task/Task';\nimport AddTask from '../AddTask/AddTask';\nimport NavbarAbove from '../Navbar/Navbar';\nimport Image from 'react-bootstrap/Image';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSort , faSortUp, faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Archive from '../Archive/Archive';\nimport logo from './preview.png';\nimport './Todo.css'\n\nclass Todo extends Component {\n\n  state = { \n    showAdd: false,\n    todoItems: [],\n    completedTodo: [],\n    originalData: [],\n    sortType: {\n      status: '',\n      label: '',\n      date: 'asc',\n      time: ''\n    },\n    currentSort: \"date\",\n    username: \"\"\n  };\n\n  UNSAFE_componentWillMount() {\n    console.log(\"In Component Will Mount\");\n    this.updateData();\n  }\n\n  updateData = () => {\n    let todoData = [];\n    let completed = [];\n\n    let token = (\"Token \" + this.props.authToken).toString();\n        \n    const requestOptions = {\n        method: 'POST',\n        headers: { \n            \"Content-Type\": \"application/json\",\n            \"Authorization\": token,\n        }\n    };\n\n    fetch('http://127.0.0.1:8000/item/get_all', requestOptions)\n    .then(response => response.json())\n    .then(data => {\n\n        let OGdata = [];\n        let keyId = 1;\n\n        data.forEach(item => {\n          let newData = {\n            key: keyId, \n            id: item[\"id\"],\n            description: item[\"description\"],\n            status: item[\"status\"],\n            label: item[\"label\"],\n            date: item[\"due_date_time\"].slice(0,10),\n            time: item[\"due_date_time\"].slice(11,19)\n          };\n          keyId++;\n          OGdata.push(newData);\n        })\n        \n        this.setState({\n          originalData: OGdata\n        }, () => {\n          this.state.originalData.forEach(item => {\n            let nowDate = Date.now();\n            let dueDate = new Date(item.date + \" \" + item.time);\n            let daysDiff = (dueDate.getTime() - nowDate) / (1000 * 3600 * 24);\n\n            if(item.status !== 'Completed') {\n              if(daysDiff < 0) {\n                item.status = \"Overdue\";\n              } else if(daysDiff <= 2) {\n                item.status = \"Pending\";\n              } else {\n                item.status = \"Ongoing\";\n              }\n              todoData.push(item);  \n            } else {\n              completed.push(item);\n            }\n          });\n      \n          this.setState({\n              todoItems: todoData,\n              completedTodo: completed\n          }, () => {\n            this.sortTasks(this.state.currentSort);\n            this.forceUpdate();\n          });\n        });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchUsername();\n  }\n\n  fetchUsername = () => {\n    let token = (\"Token \" + this.props.authToken).toString();\n        \n    const requestOptions = {\n        method: 'POST',\n        headers: { \n            \"Content-Type\": \"application/json\",\n            \"Authorization\": token,\n        }\n    };\n\n    fetch('http://127.0.0.1:8000/user/getinfo/', requestOptions)\n    .then(response => response.json())\n    .then(data => {\n        this.setState({\n          username: data[\"first_name\"]\n        });\n    });\n  }\n\n  toggleAddTask = () => {\n    this.setState({ \n      showAdd: !this.state.showAdd\n    });\n  }\n\n  addNewTask = () => {\n    this.updateData();\n    this.forceUpdate();\n  }\n\n  getSortIcon = (val) => {\n    if (this.state.currentSort === val) {\n      if (this.state.sortType[val] === 'asc') {\n        return (<FontAwesomeIcon icon={faSortUp}></FontAwesomeIcon>);\n      } else if (this.state.sortType[val] === 'desc') {\n        return (<FontAwesomeIcon icon={faSortDown}></FontAwesomeIcon>);\n      } else {\n        return (<FontAwesomeIcon icon={faSort}></FontAwesomeIcon>);\n      }\n    } else {\n      return (<FontAwesomeIcon icon={faSort}></FontAwesomeIcon>);\n    }\n  }\n\n  compareValues = (key, order) => {\n    return function innerSort(a, b) {\n      if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return 0;\n      const comparison = a[key].localeCompare(b[key]);\n  \n      return (\n        (order === 'desc') ? (comparison * -1) : comparison\n      );\n    };\n  }\n\n  sortTasks = (val, isTrue = false) => {\n    let newTodo =  [\n      ...this.state.todoItems\n    ];\n\n    let newSortType = this.state.sortType;\n    \n    let order = newSortType[val];\n\n    if(isTrue === true) {\n      if (newSortType[val] === 'asc') {\n        order = 'desc';\n      } else {\n        order = 'asc';\n      }\n    }\n  \n    newTodo.sort(this.compareValues(val, order));\n    newSortType[val] = order;\n\n    this.setState({\n      todoItems: newTodo,\n      sortType: newSortType,\n      currentSort: val\n    });\n  }\n\n  completedTask = (id, date, time) => {\n    this.state.todoItems.forEach(item => {\n      if(id.toString().localeCompare(item.id.toString()) === 0) {\n        item.status = \"Completed\";\n        item.date = date;\n        item.time = time;\n\n        let updateItem = {\n          \"id\": item.id,\n          \"description\": item.description,\n          \"status\": item.status,\n          \"label\": item.label,\n          \"date\": item.date,\n          \"time\": item.time\n        }\n\n        console.log(updateItem);\n\n        let token = (\"Token \" + this.props.authToken).toString();\n        \n        const requestOptions = {\n            method: 'POST',\n            headers: { \n                \"Content-Type\": \"application/json\",\n                \"Authorization\": token,\n            },\n            body: JSON.stringify(updateItem) \n        };\n\n        fetch('http://127.0.0.1:8000/item/update', requestOptions)\n        .then(response => {\n          if(response.status !== 200) {\n              alert(\"Произошла ошибка. В настоящее время мы работаем над ее устранением. Спасибо.\");\n          }\n        });\n      }\n    });\n\n    setTimeout(() => {\n      this.updateData();\n    }, 100);\n    \n  }\n\n  searchFunction = (fromDate, toDate, val = 1) => {\n    if(val === 1) {\n      let newTodo = [];\n      let completed = [];\n\n      this.state.originalData.forEach(item => {\n        let current = new Date(item.date + \" 00:00:00\");\n        let fDate = new Date(fromDate + \" 00:00:00\");\n        let tDate = new Date(toDate + \" 00:00:00\");\n\n        let fDaysDiff = (current.getTime() - fDate.getTime()) / (1000 * 3600 * 24);\n        let tDaysDiff = (current.getTime() - tDate.getTime()) / (1000 * 3600 * 24);\n        \n        if(fDaysDiff >= 0 && tDaysDiff <= 0) {\n          if(item.status === \"Completed\") {\n            completed.push(item);\n          } else {\n            newTodo.push(item);\n          }\n        }\n      });\n\n      if(newTodo.length !== 0) {\n        this.setState({\n          todoItems: newTodo,\n          completedTodo: completed\n        });\n      } else {\n        alert(\"Нет результатов поиска.\");\n      }\n    } else {\n      this.updateData();\n    }\n  }\n\n  aFunctionCall = (data) => {\n    this.props.changeLogin(data);\n  }\n\n  removeItem = (id) => {\n    this.state.originalData.forEach(item => {\n      if(id.toString().localeCompare(item.id.toString()) === 0) {\n        let removeItem = {\n          \"id\": item.id,\n          \"description\": item.description,\n          \"status\": item.status,\n          \"label\": item.label,\n          \"date\": item.date,\n          \"time\": item.time\n        }\n\n        let token = (\"Token \" + this.props.authToken).toString();\n        \n        const requestOptions = {\n            method: 'POST',\n            headers: { \n                \"Content-Type\": \"application/json\",\n                \"Authorization\": token,\n            },\n            body: JSON.stringify(removeItem) \n        };\n\n        fetch('http://127.0.0.1:8000/item/delete', requestOptions)\n        .then(response => {\n          if(response.status !== 200){\n            alert(\"Произошла ошибка. В настоящее время мы работаем над ее устранением. Спасибо.\");\n          }\n        });\n      }\n    });\n\n    setTimeout(() => {\n      this.updateData();\n    }, 100);\n  }\n\n  render() {\n\n    const dark = {\n      background: \"#333\",\n      color: \"white\"\n    }\n\n    const light = {\n      color: \"#555\",\n      background: \"white\"\n    }\n\n    const bgDark = {\n      background: \"#111\",\n      color: \"white\"\n    }\n\n    const bgLight = {\n      background: \"#007bff\",\n      color: \"#555\"\n    }\n\n    return (\n      <div className=\"belowBody\" style={this.props.isDark === true ? bgDark : bgLight}>\n        <NavbarAbove \n          toggleModal={this.toggleAddTask}\n          searchFunction={this.searchFunction}\n          isDark={this.props.isDark}\n          aFunctionCall={this.aFunctionCall}\n          authToken={this.props.authToken}\n          uname={this.state.username}\n          />\n\n        <AddTask \n          show={this.state.showAdd}\n          onHide={this.toggleAddTask}\n          addnewtask={this.addNewTask}\n          isDark={this.props.isDark}\n          authToken={this.props.authToken}/>\n\n        <div style={this.props.isDark === true ? dark : light} className={this.state.todoItems.length !== 0 ? \"todo-table mr-bottom\" : \"todo-table\"}>\n            {this.state.todoItems.length !== 0 ?\n              <table style={this.props.isDark === true ? dark : light} className=\"table table-borderless table-responsive\">\n              <thead className=\"thead-light\">\n                <tr className=\"head\">\n                  <th scope=\"col\"></th>\n                  <th scope=\"col\"></th>\n                  <th scope=\"col\">Задача</th>\n                  <th onClick={() => this.sortTasks(\"status\", true)} scope=\"col\">\n                    <div className=\"sort-icon\">\n                      Статус\n                      {this.getSortIcon(\"status\")}\n                    </div>\n                  </th>\n                  <th onClick={() => this.sortTasks(\"label\", true)} scope=\"col\">\n                    <div className=\"sort-icon\">\n                    Заметка\n                      {this.getSortIcon(\"label\")}\n                    </div>\n                  </th>\n                  <th onClick={() => this.sortTasks(\"date\", true)} scope=\"col\">\n                    <div className=\"sort-icon\">\n                    Дата\n                      {this.getSortIcon(\"date\")}\n                    </div>\n                  </th>\n                  <th onClick={() => this.sortTasks(\"time\", true)} scope=\"col\">\n                    <div className=\"sort-icon\">\n                    Время\n                      {this.getSortIcon(\"time\")}\n                    </div>\n                  </th>\n                  <th scope=\"col\"></th>\n                </tr>\n              </thead>\n              <tbody>\n              {this.state.todoItems.map(item => {\n                return (\n                    <Task\n                    key={item.key}\n                    id={item.id}\n                    desc={item.description}\n                    status={item.status}\n                    label={item.label}\n                    date={item.date}\n                    time={item.time}\n                    isDark={this.props.isDark}\n                    completedTask={this.completedTask}\n                    removeItem={this.removeItem}\n                    authToken={this.props.authToken}\n                    updateData={this.updateData}/>\n                )\n              })}\n              </tbody>\n              </table> :\n              <div className=\"text-center\">\n                <Image src={logo} fluid />\n                <h6 className=\"text-center\">На данный момент все готово.<br></br>Нажмите «Добавить задачу», чтобы отслеживать свои задачи..</h6>\n              </div>\n              }\n        </div>\n        <Archive \n          doneItems={this.state.completedTodo}\n          removeItem={this.removeItem}\n          isDark={this.props.isDark}/>\n      </div>\n    )\n  }\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}