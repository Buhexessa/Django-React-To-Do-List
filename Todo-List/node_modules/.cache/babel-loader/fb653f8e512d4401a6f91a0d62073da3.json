{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Todo-List\\\\Todo-List\\\\src\\\\Components\\\\SignUp\\\\SignUp.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport './SignUp.css';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setValidated = val => {\n      this.setState({\n        validated: val\n      });\n    };\n\n    this.setCheckBox = event => {\n      this.setState({\n        checked: event.target.checked\n      });\n    };\n\n    this.handleSubmit = event => {\n      const form = event.currentTarget;\n      event.preventDefault();\n\n      if (form.checkValidity() === false) {\n        event.stopPropagation();\n        this.setValidated(true);\n      } else {\n        if (this.props.loggedIn !== true && this.state.password.isValid === true && this.state.email.isValid === true && this.state.checked === true) {\n          console.log(this.state.user);\n          let signUpData = {\n            \"username\": this.state.user.username,\n            \"password\": this.state.user.password,\n            \"email\": this.state.user.email,\n            \"first_name\": this.state.user.fname,\n            \"last_name\": this.state.user.lname\n          };\n          const requestOptions = {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(signUpData)\n          };\n          fetch('http://127.0.0.1:8000/user/signup/', requestOptions).then(response => {\n            if (response.status === 200) {\n              alert(\"Registered Successfully, Login with your username and password.\");\n              this.props.changeToLogin();\n            } else if (response.status === 400) {\n              alert(\"Username already taken\");\n            }\n          });\n          this.setValidated(false);\n        }\n      }\n    };\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      let newuser = this.state.user;\n      let value = target.value;\n      const name = target.name;\n\n      if (name === \"cnfpassword\") {\n        if (newuser.password === value) {\n          this.setState({\n            password: {\n              isValid: true,\n              isInvalid: false\n            }\n          });\n        } else {\n          this.setState({\n            password: {\n              isValid: false,\n              isInvalid: true\n            }\n          });\n        }\n\n        if (value === \"\") {\n          this.setState({\n            password: {\n              isValid: false,\n              isInvalid: false\n            }\n          });\n        }\n      }\n\n      if (name === \"password\") {\n        if (newuser.cnfpassword === value) {\n          this.setState({\n            password: {\n              isValid: true,\n              isInvalid: false\n            }\n          });\n        } else {\n          this.setState({\n            password: {\n              isValid: false,\n              isInvalid: true\n            }\n          });\n        }\n\n        if (value === \"\") {\n          this.setState({\n            password: {\n              isValid: false,\n              isInvalid: false\n            }\n          });\n        }\n      }\n\n      if (name === \"email\") {\n        if (/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) {\n          this.setState({\n            email: {\n              isValid: true,\n              isInvalid: false\n            }\n          });\n        } else {\n          this.setState({\n            email: {\n              isValid: false,\n              isInvalid: true\n            }\n          });\n        }\n\n        if (value === \"\") {\n          this.setState({\n            email: {\n              isValid: false,\n              isInvalid: false\n            }\n          });\n        }\n      }\n\n      newuser[name] = value;\n      this.setState({\n        user: newuser\n      });\n    };\n\n    this.state = {\n      validated: false,\n      checked: false,\n      user: {\n        fname: \"\",\n        lname: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        cnfpassword: \"\"\n      },\n      password: {\n        isValid: false,\n        isInvalid: false\n      },\n      email: {\n        isValid: false,\n        isInvalid: false\n      }\n    };\n  }\n\n  render() {\n    const dark = {\n      background: \"#333\",\n      color: \"white\",\n      width: \"95%\"\n    };\n    const light = {\n      color: \"#555\",\n      background: \"#fff\",\n      width: \"95%\"\n    };\n    return /*#__PURE__*/React.createElement(Form, {\n      className: \"signUpForm\",\n      noValidate: true,\n      validated: this.state.validated,\n      onSubmit: this.handleSubmit,\n      style: this.props.isDark === true ? dark : light,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: 6,\n      controlId: \"validationfName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }, \"\\u0418\\u043C\\u044F\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      type: \"text\",\n      name: \"fname\",\n      value: this.state.user.fname,\n      onChange: this.handleInputChange,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F\",\n      style: this.props.isDark === true ? dark : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, \"\\u041D\\u0435\\u043F\\u043B\\u043E\\u0445\\u043E!\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, \"\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u0444\\u043E\\u0440\\u043C\\u0443!\")), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: 6,\n      controlId: \"validationlName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      type: \"text\",\n      name: \"lname\",\n      value: this.state.user.lname,\n      onChange: this.handleInputChange,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0444\\u0430\\u043C\\u0438\\u043B\\u0438\\u044E\",\n      style: this.props.isDark === true ? dark : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }, \"\\u041D\\u0435\\u043F\\u043B\\u043E\\u0445\\u043E!\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }\n    }, \"\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u0444\\u043E\\u0440\\u043C\\u0443!\"))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: 6,\n      controlId: \"validationUserName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    }, \"\\u041D\\u0438\\u043A\\u043D\\u0435\\u0439\\u043C\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      type: \"text\",\n      name: \"username\",\n      value: this.state.user.username,\n      onChange: this.handleInputChange,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0438\\u043A\\u043D\\u0435\\u0439\\u043C\",\n      style: this.props.isDark === true ? dark : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, \"\\u041D\\u0435\\u043F\\u043B\\u043E\\u0445\\u043E!\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }\n    }, \"\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u0444\\u043E\\u0440\\u043C\\u0443!\")), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: 6,\n      controlId: \"validationEmailName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }\n    }, \"Email \\u0430\\u0434\\u0440\\u0435\\u0441\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      type: \"text\",\n      name: \"email\",\n      value: this.state.user.email,\n      onChange: this.handleInputChange,\n      isValid: this.state.email.isValid,\n      isInvalid: this.state.email.isInvalid,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 email\",\n      style: this.props.isDark === true ? dark : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, \"\\u041D\\u0435\\u043F\\u043B\\u043E\\u0445\\u043E!\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }\n    }, \"\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u0444\\u043E\\u0440\\u043C\\u0443!\"))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: 6,\n      controlId: \"validationPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }\n    }, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      type: \"password\",\n      name: \"password\",\n      value: this.state.user.password,\n      onChange: this.handleInputChange,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      style: this.props.isDark === true ? dark : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }\n    }, \"\\u041D\\u0435\\u043F\\u043B\\u043E\\u0445\\u043E!\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }\n    }, \"\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u0444\\u043E\\u0440\\u043C\\u0443!\")), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: 6,\n      controlId: \"validationConfirmPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }\n    }, \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      type: \"password\",\n      name: \"cnfpassword\",\n      value: this.state.user.cnfpassword,\n      onChange: this.handleInputChange,\n      isValid: this.state.password.isValid,\n      isInvalid: this.state.password.isInvalid,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0441\\u043D\\u043E\\u0432\\u0430\",\n      style: this.props.isDark === true ? dark : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }\n    }, \"\\u041D\\u0435\\u043F\\u043B\\u043E\\u0445\\u043E!\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 21\n      }\n    }, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u0438 \\u043D\\u0435 \\u0441\\u043E\\u0432\\u043F\\u0430\\u0434\\u0430\\u044E\\u0442!\"))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      checked: this.state.checked,\n      onChange: this.setCheckBox,\n      isValid: this.state.checked,\n      label: \"\\u042F \\u043F\\u0440\\u0438\\u043D\\u0438\\u043C\\u0430\\u044E \\u0443\\u0441\\u043B\\u043E\\u0432\\u0438\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\\u0441\\u043A\\u043E\\u0433\\u043E \\u0441\\u043E\\u0433\\u043B\\u0430\\u0448\\u0435\\u043D\\u0438\\u044F.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"primary btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 25\n      }\n    }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"or mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 28\n      }\n    }, \"\\u0438\\u043B\\u0438\")))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 21\n      }\n    }, \"\\u0423\\u0436\\u0435 \\u044F\\u0432\\u043B\\u044F\\u0435\\u0442\\u0435\\u0441\\u044C \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u043E\\u043C?\", /*#__PURE__*/React.createElement(Button, {\n      className: \"ml-3\",\n      variant: \"primary btn-sm\",\n      onClick: this.props.changeToLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 25\n      }\n    }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\"))));\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/User/Desktop/Todo-List/Todo-List/src/Components/SignUp/SignUp.js"],"names":["React","Component","Form","Col","Button","SignUp","constructor","props","setValidated","val","setState","validated","setCheckBox","event","checked","target","handleSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","loggedIn","state","password","isValid","email","console","log","user","signUpData","username","fname","lname","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","status","alert","changeToLogin","handleInputChange","newuser","value","name","isInvalid","cnfpassword","test","render","dark","background","color","width","light","isDark"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAE3BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAwBnBC,YAxBmB,GAwBHC,GAAD,IAAS;AACpB,WAAKC,QAAL,CAAc;AACVC,QAAAA,SAAS,EAAEF;AADD,OAAd;AAGH,KA5BkB;;AAAA,SA8BnBG,WA9BmB,GA8BJC,KAAD,IAAW;AACrB,WAAKH,QAAL,CAAc;AACVI,QAAAA,OAAO,EAAED,KAAK,CAACE,MAAN,CAAaD;AADZ,OAAd;AAGH,KAlCkB;;AAAA,SAoCnBE,YApCmB,GAoCHH,KAAD,IAAW;AACtB,YAAMI,IAAI,GAAGJ,KAAK,CAACK,aAAnB;AACAL,MAAAA,KAAK,CAACM,cAAN;;AAEA,UAAIF,IAAI,CAACG,aAAL,OAAyB,KAA7B,EAAoC;AAChCP,QAAAA,KAAK,CAACQ,eAAN;AACA,aAAKb,YAAL,CAAkB,IAAlB;AACH,OAHD,MAGO;AACH,YAAG,KAAKD,KAAL,CAAWe,QAAX,KAAwB,IAAxB,IAAgC,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,OAApB,KAAgC,IAAhE,IAAwE,KAAKF,KAAL,CAAWG,KAAX,CAAiBD,OAAjB,KAA6B,IAArG,IAA6G,KAAKF,KAAL,CAAWT,OAAX,KAAuB,IAAvI,EAA6I;AACzIa,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWM,IAAvB;AACA,cAAIC,UAAU,GAAG;AACb,wBAAY,KAAKP,KAAL,CAAWM,IAAX,CAAgBE,QADf;AAEb,wBAAY,KAAKR,KAAL,CAAWM,IAAX,CAAgBL,QAFf;AAGb,qBAAS,KAAKD,KAAL,CAAWM,IAAX,CAAgBH,KAHZ;AAIb,0BAAc,KAAKH,KAAL,CAAWM,IAAX,CAAgBG,KAJjB;AAKb,yBAAa,KAAKT,KAAL,CAAWM,IAAX,CAAgBI;AALhB,WAAjB;AAOA,gBAAMC,cAAc,GAAG;AACnBC,YAAAA,MAAM,EAAE,MADW;AAEnBC,YAAAA,OAAO,EAAE;AAAE,8BAAgB;AAAlB,aAFU;AAGnBC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,UAAf;AAHa,WAAvB;AAKAU,UAAAA,KAAK,CAAC,oCAAD,EAAuCN,cAAvC,CAAL,CACCO,IADD,CACMC,QAAQ,IAAI;AACd,gBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBC,cAAAA,KAAK,CAAC,iEAAD,CAAL;AACA,mBAAKrC,KAAL,CAAWsC,aAAX;AACH,aAHD,MAGO,IAAGH,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA4B;AAC/BC,cAAAA,KAAK,CAAC,wBAAD,CAAL;AACH;AACJ,WARD;AAUA,eAAKpC,YAAL,CAAkB,KAAlB;AACH;AACJ;AACJ,KAvEkB;;AAAA,SAyEnBsC,iBAzEmB,GAyEEjC,KAAD,IAAW;AAC3B,YAAME,MAAM,GAAGF,KAAK,CAACE,MAArB;AACA,UAAIgC,OAAO,GAAG,KAAKxB,KAAL,CAAWM,IAAzB;AACA,UAAImB,KAAK,GAAGjC,MAAM,CAACiC,KAAnB;AACA,YAAMC,IAAI,GAAGlC,MAAM,CAACkC,IAApB;;AAEA,UAAGA,IAAI,KAAK,aAAZ,EAA2B;AACvB,YAAGF,OAAO,CAACvB,QAAR,KAAqBwB,KAAxB,EAA+B;AAC3B,eAAKtC,QAAL,CAAc;AACVc,YAAAA,QAAQ,EAAE;AACNC,cAAAA,OAAO,EAAE,IADH;AAENyB,cAAAA,SAAS,EAAE;AAFL;AADA,WAAd;AAMH,SAPD,MAOO;AACH,eAAKxC,QAAL,CAAc;AACVc,YAAAA,QAAQ,EAAE;AACNC,cAAAA,OAAO,EAAE,KADH;AAENyB,cAAAA,SAAS,EAAE;AAFL;AADA,WAAd;AAMH;;AAED,YAAGF,KAAK,KAAK,EAAb,EAAiB;AACb,eAAKtC,QAAL,CAAc;AACVc,YAAAA,QAAQ,EAAE;AACNC,cAAAA,OAAO,EAAE,KADH;AAENyB,cAAAA,SAAS,EAAE;AAFL;AADA,WAAd;AAMH;AACJ;;AAED,UAAGD,IAAI,KAAK,UAAZ,EAAwB;AACpB,YAAGF,OAAO,CAACI,WAAR,KAAwBH,KAA3B,EAAkC;AAC9B,eAAKtC,QAAL,CAAc;AACVc,YAAAA,QAAQ,EAAE;AACNC,cAAAA,OAAO,EAAE,IADH;AAENyB,cAAAA,SAAS,EAAE;AAFL;AADA,WAAd;AAMH,SAPD,MAOO;AACH,eAAKxC,QAAL,CAAc;AACVc,YAAAA,QAAQ,EAAE;AACNC,cAAAA,OAAO,EAAE,KADH;AAENyB,cAAAA,SAAS,EAAE;AAFL;AADA,WAAd;AAMH;;AAED,YAAGF,KAAK,KAAK,EAAb,EAAiB;AACb,eAAKtC,QAAL,CAAc;AACVc,YAAAA,QAAQ,EAAE;AACNC,cAAAA,OAAO,EAAE,KADH;AAENyB,cAAAA,SAAS,EAAE;AAFL;AADA,WAAd;AAMH;AACJ;;AAED,UAAGD,IAAI,KAAK,OAAZ,EAAqB;AACjB,YAAG,8CAA8CG,IAA9C,CAAmDJ,KAAnD,CAAH,EAA8D;AAC1D,eAAKtC,QAAL,CAAc;AACVgB,YAAAA,KAAK,EAAE;AACHD,cAAAA,OAAO,EAAE,IADN;AAEHyB,cAAAA,SAAS,EAAE;AAFR;AADG,WAAd;AAMH,SAPD,MAOO;AACH,eAAKxC,QAAL,CAAc;AACVgB,YAAAA,KAAK,EAAE;AACHD,cAAAA,OAAO,EAAE,KADN;AAEHyB,cAAAA,SAAS,EAAE;AAFR;AADG,WAAd;AAMH;;AAED,YAAGF,KAAK,KAAK,EAAb,EAAiB;AACb,eAAKtC,QAAL,CAAc;AACVgB,YAAAA,KAAK,EAAE;AACHD,cAAAA,OAAO,EAAE,KADN;AAEHyB,cAAAA,SAAS,EAAE;AAFR;AADG,WAAd;AAMH;AACJ;;AAEDH,MAAAA,OAAO,CAACE,IAAD,CAAP,GAAgBD,KAAhB;AACA,WAAKtC,QAAL,CAAc;AACVmB,QAAAA,IAAI,EAAEkB;AADI,OAAd;AAGH,KApKkB;;AAEf,SAAKxB,KAAL,GAAa;AACTZ,MAAAA,SAAS,EAAE,KADF;AAETG,MAAAA,OAAO,EAAE,KAFA;AAGTe,MAAAA,IAAI,EAAE;AACFG,QAAAA,KAAK,EAAE,EADL;AAEFC,QAAAA,KAAK,EAAE,EAFL;AAGFF,QAAAA,QAAQ,EAAE,EAHR;AAIFL,QAAAA,KAAK,EAAE,EAJL;AAKFF,QAAAA,QAAQ,EAAE,EALR;AAMF2B,QAAAA,WAAW,EAAE;AANX,OAHG;AAWT3B,MAAAA,QAAQ,EAAE;AACNC,QAAAA,OAAO,EAAE,KADH;AAENyB,QAAAA,SAAS,EAAE;AAFL,OAXD;AAeTxB,MAAAA,KAAK,EAAE;AACHD,QAAAA,OAAO,EAAE,KADN;AAEHyB,QAAAA,SAAS,EAAE;AAFR;AAfE,KAAb;AAoBH;;AAgJDG,EAAAA,MAAM,GAAG;AAEL,UAAMC,IAAI,GAAG;AACTC,MAAAA,UAAU,EAAE,MADH;AAETC,MAAAA,KAAK,EAAE,OAFE;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAMA,UAAMC,KAAK,GAAG;AACVF,MAAAA,KAAK,EAAE,MADG;AAEVD,MAAAA,UAAU,EAAE,MAFF;AAGVE,MAAAA,KAAK,EAAE;AAHG,KAAd;AAMA,wBACI,oBAAC,IAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,UAAU,MAFd;AAGI,MAAA,SAAS,EAAE,KAAKlC,KAAL,CAAWZ,SAH1B;AAII,MAAA,QAAQ,EAAE,KAAKK,YAJnB;AAKI,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWoD,MAAX,KAAsB,IAAtB,GAA6BL,IAA7B,GAAoCI,KAL/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EANJ,eAOI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEvD,GAAhB;AAAqB,MAAA,EAAE,EAAE,CAAzB;AAA4B,MAAA,SAAS,EAAC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,eAEA,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,KAAK,EAAE,KAAKoB,KAAL,CAAWM,IAAX,CAAgBG,KAJ3B;AAKI,MAAA,QAAQ,EAAE,KAAKc,iBALnB;AAMI,MAAA,WAAW,EAAC,+DANhB;AAOI,MAAA,KAAK,EAAE,KAAKvC,KAAL,CAAWoD,MAAX,KAAsB,IAAtB,GAA6BL,IAA7B,GAAoC,IAP/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAWA,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAXA,eAYA,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,MAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGAZA,CADJ,eAeI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEnD,GAAhB;AAAqB,MAAA,EAAE,EAAE,CAAzB;AAA4B,MAAA,SAAS,EAAC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADA,eAEA,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,KAAK,EAAE,KAAKoB,KAAL,CAAWM,IAAX,CAAgBI,KAJ3B;AAKI,MAAA,QAAQ,EAAE,KAAKa,iBALnB;AAMI,MAAA,WAAW,EAAC,uFANhB;AAOI,MAAA,KAAK,EAAE,KAAKvC,KAAL,CAAWoD,MAAX,KAAsB,IAAtB,GAA6BL,IAA7B,GAAoC,IAP/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAWA,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAXA,eAYA,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,MAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGAZA,CAfJ,CAPJ,eAqCI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEnD,GAAhB;AAAqB,MAAA,EAAE,EAAE,CAAzB;AAA4B,MAAA,SAAS,EAAC,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADA,eAEA,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,KAAK,EAAE,KAAKoB,KAAL,CAAWM,IAAX,CAAgBE,QAJ3B;AAKI,MAAA,QAAQ,EAAE,KAAKe,iBALnB;AAMI,MAAA,WAAW,EAAC,uFANhB;AAOI,MAAA,KAAK,EAAE,KAAKvC,KAAL,CAAWoD,MAAX,KAAsB,IAAtB,GAA6BL,IAA7B,GAAoC,IAP/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAWA,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAXA,eAYA,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,MAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGAZA,CADJ,eAeI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEnD,GAAhB;AAAqB,MAAA,EAAE,EAAE,CAAzB;AAA4B,MAAA,SAAS,EAAC,qBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADA,eAEA,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,KAAK,EAAE,KAAKoB,KAAL,CAAWM,IAAX,CAAgBH,KAJ3B;AAKI,MAAA,QAAQ,EAAE,KAAKoB,iBALnB;AAMI,MAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWG,KAAX,CAAiBD,OAN9B;AAOI,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG,KAAX,CAAiBwB,SAPhC;AAQI,MAAA,WAAW,EAAC,kDARhB;AASI,MAAA,KAAK,EAAE,KAAK3C,KAAL,CAAWoD,MAAX,KAAsB,IAAtB,GAA6BL,IAA7B,GAAoC,IAT/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAaA,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAbA,eAcA,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,MAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGAdA,CAfJ,CArCJ,eAqEI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEnD,GAAhB;AAAqB,MAAA,EAAE,EAAE,CAAzB;AAA4B,MAAA,SAAS,EAAC,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADA,eAEA,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,KAAK,EAAE,KAAKoB,KAAL,CAAWM,IAAX,CAAgBL,QAJ3B;AAKI,MAAA,QAAQ,EAAE,KAAKsB,iBALnB;AAMI,MAAA,WAAW,EAAC,iFANhB;AAOI,MAAA,KAAK,EAAE,KAAKvC,KAAL,CAAWoD,MAAX,KAAsB,IAAtB,GAA6BL,IAA7B,GAAoC,IAP/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAWA,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAXA,eAYA,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,MAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGAZA,CADJ,eAeI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEnD,GAAhB;AAAqB,MAAA,EAAE,EAAE,CAAzB;AAA4B,MAAA,SAAS,EAAC,2BAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHADA,eAEA,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,IAAI,EAAC,aAHT;AAII,MAAA,KAAK,EAAE,KAAKoB,KAAL,CAAWM,IAAX,CAAgBsB,WAJ3B;AAKI,MAAA,QAAQ,EAAE,KAAKL,iBALnB;AAMI,MAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWC,QAAX,CAAoBC,OANjC;AAOI,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWC,QAAX,CAAoB0B,SAPnC;AAQI,MAAA,WAAW,EAAC,gHARhB;AASI,MAAA,KAAK,EAAE,KAAK3C,KAAL,CAAWoD,MAAX,KAAsB,IAAtB,GAA6BL,IAA7B,GAAoC,IAT/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAaA,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAbA,eAcA,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,MAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mHAdA,CAfJ,CArEJ,eAqGI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AACA,MAAA,OAAO,EAAE,KAAK/B,KAAL,CAAWT,OADpB;AAEA,MAAA,QAAQ,EAAE,KAAKF,WAFf;AAGA,MAAA,OAAO,EAAE,KAAKW,KAAL,CAAWT,OAHpB;AAIA,MAAA,KAAK,EAAC,yQAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CArGJ,eA6GI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEX,GAAhB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAC,mBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sHADJ,CADJ,CA7GJ,eAkHI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAH,CADJ,CADJ,CAlHJ,eAuHI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+JAEI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAyB,MAAA,OAAO,EAAC,gBAAjC;AAAkD,MAAA,OAAO,EAAE,KAAKI,KAAL,CAAWsC,aAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAFJ,CADJ,CAvHJ,CADJ;AAgIH;;AAtT0B;;AAyT/B,eAAexC,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport './SignUp.css';\n\nclass SignUp extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            validated: false,\n            checked: false,\n            user: {\n                fname: \"\",\n                lname: \"\",\n                username: \"\",\n                email: \"\",\n                password: \"\",\n                cnfpassword: \"\"\n            },\n            password: {\n                isValid: false,\n                isInvalid: false\n            },\n            email: {\n                isValid: false,\n                isInvalid: false\n            }\n        }\n    }\n\n    setValidated = (val) => {\n        this.setState({\n            validated: val\n        })\n    }\n\n    setCheckBox = (event) => {\n        this.setState({\n            checked: event.target.checked\n        })\n    }\n\n    handleSubmit = (event) => {\n        const form = event.currentTarget;\n        event.preventDefault();\n\n        if (form.checkValidity() === false) {\n            event.stopPropagation();\n            this.setValidated(true);\n        } else {\n            if(this.props.loggedIn !== true && this.state.password.isValid === true && this.state.email.isValid === true && this.state.checked === true) {\n                console.log(this.state.user);\n                let signUpData = {\n                    \"username\": this.state.user.username,\n                    \"password\": this.state.user.password,\n                    \"email\": this.state.user.email,\n                    \"first_name\": this.state.user.fname,\n                    \"last_name\": this.state.user.lname\n                }\n                const requestOptions = {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(signUpData)\n                };\n                fetch('http://127.0.0.1:8000/user/signup/', requestOptions)\n                .then(response => {\n                    if (response.status === 200) {\n                        alert(\"Registered Successfully, Login with your username and password.\");\n                        this.props.changeToLogin();\n                    } else if(response.status === 400) {\n                        alert(\"Username already taken\");\n                    }\n                });\n\n                this.setValidated(false);\n            }\n        }\n    }\n\n    handleInputChange = (event) => {\n        const target = event.target;\n        let newuser = this.state.user;\n        let value = target.value;\n        const name = target.name;\n    \n        if(name === \"cnfpassword\") {\n            if(newuser.password === value) {\n                this.setState({\n                    password: {\n                        isValid: true,\n                        isInvalid: false\n                    }\n                });\n            } else {\n                this.setState({\n                    password: {\n                        isValid: false,\n                        isInvalid: true\n                    }\n                });\n            }\n\n            if(value === \"\") {\n                this.setState({\n                    password: {\n                        isValid: false,\n                        isInvalid: false\n                    }\n                })\n            }\n        }\n\n        if(name === \"password\") {\n            if(newuser.cnfpassword === value) {\n                this.setState({\n                    password: {\n                        isValid: true,\n                        isInvalid: false\n                    }\n                });\n            } else {\n                this.setState({\n                    password: {\n                        isValid: false,\n                        isInvalid: true\n                    }\n                });\n            }\n\n            if(value === \"\") {\n                this.setState({\n                    password: {\n                        isValid: false,\n                        isInvalid: false\n                    }\n                })\n            }\n        }\n\n        if(name === \"email\") {\n            if(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) {\n                this.setState({\n                    email: {\n                        isValid: true,\n                        isInvalid: false\n                    }\n                });\n            } else {\n                this.setState({\n                    email: {\n                        isValid: false,\n                        isInvalid: true\n                    }\n                });\n            }\n\n            if(value === \"\") {\n                this.setState({\n                    email: {\n                        isValid: false,\n                        isInvalid: false\n                    }\n                })\n            }\n        }\n\n        newuser[name] = value;\n        this.setState({\n            user: newuser\n        });\n    }\n\n    render() {\n\n        const dark = {\n            background: \"#333\",\n            color: \"white\",\n            width: \"95%\"\n        }\n\n        const light = {\n            color: \"#555\",\n            background: \"#fff\",\n            width: \"95%\"\n        }\n\n        return (\n            <Form \n                className=\"signUpForm\" \n                noValidate \n                validated={this.state.validated}\n                onSubmit={this.handleSubmit}\n                style={this.props.isDark === true ? dark : light}>\n                <h3>Регистрация</h3>\n                <Form.Row>\n                    <Form.Group as={Col} md={6} controlId=\"validationfName\">\n                    <Form.Label>Имя</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        name=\"fname\"\n                        value={this.state.user.fname}\n                        onChange={this.handleInputChange}\n                        placeholder=\"Введите имя\"\n                        style={this.props.isDark === true ? dark : null}\n                    />\n                    <Form.Control.Feedback>Неплохо!</Form.Control.Feedback>\n                    <Form.Control.Feedback type=\"invalid\">Заполните форму!</Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} md={6} controlId=\"validationlName\">\n                    <Form.Label>Фамилия</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        name=\"lname\"\n                        value={this.state.user.lname}\n                        onChange={this.handleInputChange}\n                        placeholder=\"Введите фамилию\"\n                        style={this.props.isDark === true ? dark : null}\n                    />\n                    <Form.Control.Feedback>Неплохо!</Form.Control.Feedback>\n                    <Form.Control.Feedback type=\"invalid\">Заполните форму!</Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} md={6} controlId=\"validationUserName\">\n                    <Form.Label>Никнейм</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        name=\"username\"\n                        value={this.state.user.username}\n                        onChange={this.handleInputChange}\n                        placeholder=\"Введите никнейм\"\n                        style={this.props.isDark === true ? dark : null}\n                    />\n                    <Form.Control.Feedback>Неплохо!</Form.Control.Feedback>\n                    <Form.Control.Feedback type=\"invalid\">Заполните форму!</Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} md={6} controlId=\"validationEmailName\">\n                    <Form.Label>Email адрес</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        name=\"email\"\n                        value={this.state.user.email}\n                        onChange={this.handleInputChange}\n                        isValid={this.state.email.isValid}\n                        isInvalid={this.state.email.isInvalid}\n                        placeholder=\"Введите email\"\n                        style={this.props.isDark === true ? dark : null}\n                    />\n                    <Form.Control.Feedback>Неплохо!</Form.Control.Feedback>\n                    <Form.Control.Feedback type=\"invalid\">Заполните форму!</Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} md={6} controlId=\"validationPassword\">\n                    <Form.Label>Пароль</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"password\"\n                        name=\"password\"\n                        value={this.state.user.password}\n                        onChange={this.handleInputChange}\n                        placeholder=\"Введите пароль\"\n                        style={this.props.isDark === true ? dark : null}\n                    />\n                    <Form.Control.Feedback>Неплохо!</Form.Control.Feedback>\n                    <Form.Control.Feedback type=\"invalid\">Заполните форму!</Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} md={6} controlId=\"validationConfirmPassword\">\n                    <Form.Label>Подтвердите пароль</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"password\"\n                        name=\"cnfpassword\"\n                        value={this.state.user.cnfpassword}\n                        onChange={this.handleInputChange}\n                        isValid={this.state.password.isValid}\n                        isInvalid={this.state.password.isInvalid}\n                        placeholder=\"Введите пароль снова\"\n                        style={this.props.isDark === true ? dark : null}\n                    />\n                    <Form.Control.Feedback>Неплохо!</Form.Control.Feedback>\n                    <Form.Control.Feedback type=\"invalid\">Пароли не совпадают!</Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Group>\n                    <Form.Check\n                    checked={this.state.checked}\n                    onChange={this.setCheckBox}\n                    isValid={this.state.checked}\n                    label=\"Я принимаю условия пользовательского соглашения.\"\n                    />\n                </Form.Group>\n                <Form.Row>\n                    <Form.Group as={Col} md={12}>\n                        <Button type=\"submit\" variant=\"primary btn-block\">Зарегистрироваться</Button>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <div className=\"or mx-auto\">\n                        <p><span>или</span></p>\n                    </div>\n                </Form.Row>\n                <Form.Row>\n                    <p className=\"mx-auto\">\n                        Уже являетесь участником?\n                        <Button className=\"ml-3\" variant=\"primary btn-sm\" onClick={this.props.changeToLogin}>Войти</Button>\n                    </p>\n                </Form.Row>\n            </Form>\n        )\n    }\n}\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}